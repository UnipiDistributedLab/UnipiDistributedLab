syntax = "proto3";
option java_multiple_files = true;
option java_package = "io.grpc.unipi.election";
option java_outer_classname = "ApiProto";
option objc_class_prefix = "HLW";
package org.example.distributed;

message AppendEntryArgs {
        int32 term = 1;
        int32 leaderId = 2;
        repeated  int32 entries = 3;
        int32 prevLogIndex = 4;
        int32 prevLogTerm = 5;
        int32 leaderCommit	 = 6;
}

message AppendEntryReply {
        int32 term = 1;
        bool success = 2;
        int32 conflictIndex	 = 3;
        int32 conflictTerm	 = 4;
}

message RequestVoteArgs {
        int32 term = 1;
        int32 candidateId = 2;
        int32 lastLogIndex	 = 3;
        int32 lastLogTerm	 = 4;
}

message RequestVoteReply {
        int32 term = 1;
        bool voteGranted = 2;
}

message Empty {}

message LeaderHealthCheckInfo {
        int32 grPcPort = 1;
        int32 apiPort = 2;
        int32 id = 3;
        string url = 4;
}

message LeaderKillRequest {
        int32 leaderId = 1;
}

service LeaderElection{
//        rpc election(ElectionRequest)returns(ElectionResponse);
        rpc appendEntry(AppendEntryArgs)returns(AppendEntryReply);
        rpc requestVote(RequestVoteArgs)returns(RequestVoteReply);
        rpc heartBeat(LeaderHealthCheckInfo)returns(Empty);
        rpc leaderKill(LeaderKillRequest)returns(Empty);
        rpc giveTheLeader(Empty)returns(LeaderHealthCheckInfo);
}